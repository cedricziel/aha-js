/* tslint:disable */
/* eslint-disable */
/**
 * Aha! REST API
 * API for interacting with Aha! product management platform.  ## Rate Limiting The API enforces rate limits to ensure fair usage: - **300 requests per minute** per account - **20 requests per second** per account  When rate limits are exceeded, the API returns a `429 Too Many Requests` response with a `retry_after` header indicating when to retry.  ## Authentication The API supports two authentication methods: - **OAuth 2.0**: For web applications and integrations requiring user consent - **API Tokens**: For server-to-server integrations and personal access  ## Request Headers - **User-Agent**: Required header to identify the client application - **Content-Type**: Set to `application/json` for POST/PUT requests - **Authorization**: Bearer token or OAuth access token  ## Response Format All responses are in JSON format. List endpoints include pagination metadata in the `meta.pagination` object.  ## Error Handling The API uses standard HTTP status codes and includes detailed error messages in the response body for debugging. 
 *
 * The version of the OpenAPI document: 1.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { FeatureCreateRequestFeatureWorkflowStatus } from './feature-create-request-feature-workflow-status';

/**
 * 
 * @export
 * @interface FeatureUpdateRequestFeature
 */
export interface FeatureUpdateRequestFeature {
    /**
     * Name of the feature
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'name'?: string;
    /**
     * Type of feature
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'workflow_kind'?: string;
    /**
     * 
     * @type {FeatureCreateRequestFeatureWorkflowStatus}
     * @memberof FeatureUpdateRequestFeature
     */
    'workflow_status'?: FeatureCreateRequestFeatureWorkflowStatus;
    /**
     * Numeric ID or key of the release the feature should be created in
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'release'?: string;
    /**
     * Description of the feature — may include HTML formatting
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'description'?: string;
    /**
     * Email address of the user who created the feature
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'created_by'?: string;
    /**
     * Email address of user that is assigned the feature
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'assigned_to_user'?: string;
    /**
     * Tags to add to the feature. Multiple tags must be separated by commas
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'tags'?: string;
    /**
     * The initial estimated effort in time or story points for this feature, depending on the capacity units configured. For time: use min, h, d, w, m. Example: \"2d 1h\". 1d = 8h, 1w = 5d, 1m = 22d. For story points: Use p to represent points. Example: \"4p\".
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'initial_estimate_text'?: string;
    /**
     * The detailed estimated effort in time or story points for this feature, depending on the capacity units configured. For time: use min, h, d, w, m. Example: \"2d 1h\". 1d = 8h, 1w = 5d, 1m = 22d. For story points: Use p to represent points. Example: \"4p\".
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'detailed_estimate_text'?: string;
    /**
     * The remaining estimated effort in time or story points for this feature, depending on the capacity units configured. For time: use min, h, d, w, m. Example: \"2d 1h\". 1d = 8h, 1w = 5d, 1m = 22d. For story points: Use p to represent points. Example: \"4p\".
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'remaining_estimate_text'?: string;
    /**
     * Set the initial estimated effort in minutes or story points, depending on the capacity units configured
     * @type {number}
     * @memberof FeatureUpdateRequestFeature
     */
    'initial_estimate'?: number;
    /**
     * Set the detailed estimated effort in minutes or story points, depending on the capacity units configured
     * @type {number}
     * @memberof FeatureUpdateRequestFeature
     */
    'detailed_estimate'?: number;
    /**
     * Set the remaining estimated effort in minutes or story points, depending on the capacity units configured
     * @type {number}
     * @memberof FeatureUpdateRequestFeature
     */
    'remaining_estimate'?: number;
    /**
     * Date that work will start on the feature in format YYYY-MM-DD
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'start_date'?: string;
    /**
     * Date that work is due to be completed on the feature in format YYYY-MM-DD
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'due_date'?: string;
    /**
     * Name or id of release phase which the feature belongs to
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'release_phase'?: string;
    /**
     * Name or id of initiative which the feature belongs to
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'initiative'?: string;
    /**
     * Name or id of epic which the feature belongs to
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'epic'?: string;
    /**
     * Source for calculating progress on the feature. Options are: progress_manual, progress_from_requirements, progress_from_remaining_estimate, progress_from_todos
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'progress_source'?: string;
    /**
     * Progress completed on the feature. May only be set when the progress_source is manual
     * @type {number}
     * @memberof FeatureUpdateRequestFeature
     */
    'progress'?: number;
    /**
     * Numeric ID or key of the Develop team to assign the feature to
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'team'?: string;
    /**
     * Team status of the feature — must be a valid status for the selected team
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'team_workflow_status'?: string;
    /**
     * ID of sprint to assign the feature to, must belong to the selected team
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'iteration'?: string;
    /**
     * Numeric ID or key of the PI to assign the feature to, must belong to the selected team
     * @type {string}
     * @memberof FeatureUpdateRequestFeature
     */
    'program_increment'?: string;
}

