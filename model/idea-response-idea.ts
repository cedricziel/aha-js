/* tslint:disable */
/* eslint-disable */
/**
 * Aha! REST API
 * API for interacting with Aha! product management platform.  ## Rate Limiting The API enforces rate limits to ensure fair usage: - **300 requests per minute** per account - **20 requests per second** per account  When rate limits are exceeded, the API returns a `429 Too Many Requests` response with a `retry_after` header indicating when to retry.  ## Authentication The API supports two authentication methods: - **OAuth 2.0**: For web applications and integrations requiring user consent - **API Tokens**: For server-to-server integrations and personal access  ## Request Headers - **User-Agent**: Required header to identify the client application - **Content-Type**: Set to `application/json` for POST/PUT requests - **Authorization**: Bearer token or OAuth access token  ## Response Format All responses are in JSON format. List endpoints include pagination metadata in the `meta.pagination` object.  ## Error Handling The API uses standard HTTP status codes and includes detailed error messages in the response body for debugging. 
 *
 * The version of the OpenAPI document: 1.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { FeatureDescription } from './feature-description';
// May contain unused imports in some cases
// @ts-ignore
import type { FeatureProject } from './feature-project';
// May contain unused imports in some cases
// @ts-ignore
import type { FeatureWorkflowStatus } from './feature-workflow-status';
// May contain unused imports in some cases
// @ts-ignore
import type { IdeaResponseIdeaAssignedToUser } from './idea-response-idea-assigned-to-user';
// May contain unused imports in some cases
// @ts-ignore
import type { IdeaResponseIdeaCreatedByPortalUser } from './idea-response-idea-created-by-portal-user';
// May contain unused imports in some cases
// @ts-ignore
import type { IdeaResponseIdeaCreatedByUser } from './idea-response-idea-created-by-user';
// May contain unused imports in some cases
// @ts-ignore
import type { IdeaResponseIdeaScoreFactsInner } from './idea-response-idea-score-facts-inner';
// May contain unused imports in some cases
// @ts-ignore
import type { IdeaResponseIdeaWorkflowStatusTimesInner } from './idea-response-idea-workflow-status-times-inner';

export interface IdeaResponseIdea {
    'id'?: string;
    'name'?: string;
    'reference_num'?: string;
    'score'?: number;
    'created_at'?: string;
    'updated_at'?: string;
    'product_id'?: string;
    'votes'?: number;
    'initial_votes'?: number;
    'status_changed_at'?: string;
    'workflow_status'?: FeatureWorkflowStatus;
    'description'?: FeatureDescription;
    'visibility'?: string;
    'url'?: string;
    'resource'?: string;
    'product'?: FeatureProject;
    'created_by_user'?: IdeaResponseIdeaCreatedByUser;
    'created_by_portal_user'?: IdeaResponseIdeaCreatedByPortalUser;
    'created_by_idea_user'?: IdeaResponseIdeaCreatedByPortalUser;
    'assigned_to_user'?: IdeaResponseIdeaAssignedToUser | null;
    'endorsements_count'?: number;
    'comments_count'?: number;
    /**
     * Score facts for the idea
     */
    'score_facts'?: Array<IdeaResponseIdeaScoreFactsInner>;
    'tags'?: Array<string>;
    'full_tags'?: Array<object>;
    'categories'?: Array<object>;
    'custom_fields'?: Array<object>;
    'workflow_status_times'?: Array<IdeaResponseIdeaWorkflowStatusTimesInner>;
    'submitted_idea_portal_record_url'?: string;
    'integration_fields'?: Array<object>;
}

