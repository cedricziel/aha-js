/* tslint:disable */
/* eslint-disable */
/**
 * Aha! REST API
 * API for interacting with Aha! product management platform.  ## Rate Limiting The API enforces rate limits to ensure fair usage: - **300 requests per minute** per account - **20 requests per second** per account  When rate limits are exceeded, the API returns a `429 Too Many Requests` response with a `retry_after` header indicating when to retry.  ## Authentication The API supports two authentication methods: - **OAuth 2.0**: For web applications and integrations requiring user consent - **API Tokens**: For server-to-server integrations and personal access  ## Request Headers - **User-Agent**: Required header to identify the client application - **Content-Type**: Set to `application/json` for POST/PUT requests - **Authorization**: Bearer token or OAuth access token  ## Response Format All responses are in JSON format. List endpoints include pagination metadata in the `meta.pagination` object.  ## Error Handling The API uses standard HTTP status codes and includes detailed error messages in the response body for debugging. 
 *
 * The version of the OpenAPI document: 1.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface IdeaPromoteRequest
 */
export interface IdeaPromoteRequest {
    /**
     * Type of record to promote the idea to
     * @type {string}
     * @memberof IdeaPromoteRequest
     */
    'promote_to': IdeaPromoteRequestPromoteToEnum;
    /**
     * ID of the user to assign the promoted record to
     * @type {string}
     * @memberof IdeaPromoteRequest
     */
    'assignee_id'?: string;
    /**
     * ID of the release to associate with the promoted record (for features)
     * @type {string}
     * @memberof IdeaPromoteRequest
     */
    'release_id'?: string;
    /**
     * ID of the epic to associate with the promoted record (for features)
     * @type {string}
     * @memberof IdeaPromoteRequest
     */
    'epic_id'?: string;
    /**
     * ID of the initiative to associate with the promoted record
     * @type {string}
     * @memberof IdeaPromoteRequest
     */
    'initiative_id'?: string;
    /**
     * Whether to copy tags from the idea to the promoted record
     * @type {boolean}
     * @memberof IdeaPromoteRequest
     */
    'copy_tags'?: boolean;
    /**
     * Whether to copy custom fields from the idea to the promoted record
     * @type {boolean}
     * @memberof IdeaPromoteRequest
     */
    'copy_custom_fields'?: boolean;
    /**
     * Whether to copy the description from the idea to the promoted record
     * @type {boolean}
     * @memberof IdeaPromoteRequest
     */
    'copy_description'?: boolean;
    /**
     * Whether to copy attachments from the idea to the promoted record
     * @type {boolean}
     * @memberof IdeaPromoteRequest
     */
    'copy_attachments'?: boolean;
}

export const IdeaPromoteRequestPromoteToEnum = {
    FEATURE: 'feature',
    EPIC: 'epic',
    INITIATIVE: 'initiative'
} as const;

export type IdeaPromoteRequestPromoteToEnum = typeof IdeaPromoteRequestPromoteToEnum[keyof typeof IdeaPromoteRequestPromoteToEnum];


