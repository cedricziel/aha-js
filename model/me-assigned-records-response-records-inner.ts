/* tslint:disable */
/* eslint-disable */
/**
 * Aha! REST API
 * API for interacting with Aha! product management platform.  ## Rate Limiting The API enforces rate limits to ensure fair usage: - **300 requests per minute** per account - **20 requests per second** per account  When rate limits are exceeded, the API returns a `429 Too Many Requests` response with a `retry_after` header indicating when to retry.  ## Authentication The API supports two authentication methods: - **OAuth 2.0**: For web applications and integrations requiring user consent - **API Tokens**: For server-to-server integrations and personal access  ## Request Headers - **User-Agent**: Required header to identify the client application - **Content-Type**: Set to `application/json` for POST/PUT requests - **Authorization**: Bearer token or OAuth access token  ## Response Format All responses are in JSON format. List endpoints include pagination metadata in the `meta.pagination` object.  ## Error Handling The API uses standard HTTP status codes and includes detailed error messages in the response body for debugging. 
 *
 * The version of the OpenAPI document: 1.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { MeAssignedRecordsResponseRecordsInnerAssignedToUser } from './me-assigned-records-response-records-inner-assigned-to-user';
// May contain unused imports in some cases
// @ts-ignore
import type { MeAssignedRecordsResponseRecordsInnerWorkflowStatus } from './me-assigned-records-response-records-inner-workflow-status';

/**
 * 
 * @export
 * @interface MeAssignedRecordsResponseRecordsInner
 */
export interface MeAssignedRecordsResponseRecordsInner {
    /**
     * Record ID
     * @type {string}
     * @memberof MeAssignedRecordsResponseRecordsInner
     */
    'id': string;
    /**
     * Type of record
     * @type {string}
     * @memberof MeAssignedRecordsResponseRecordsInner
     */
    'type': MeAssignedRecordsResponseRecordsInnerTypeEnum;
    /**
     * Name of the record
     * @type {string}
     * @memberof MeAssignedRecordsResponseRecordsInner
     */
    'name': string;
    /**
     * Reference number for the record
     * @type {string}
     * @memberof MeAssignedRecordsResponseRecordsInner
     */
    'reference_num'?: string;
    /**
     * 
     * @type {MeAssignedRecordsResponseRecordsInnerWorkflowStatus}
     * @memberof MeAssignedRecordsResponseRecordsInner
     */
    'workflow_status'?: MeAssignedRecordsResponseRecordsInnerWorkflowStatus;
    /**
     * 
     * @type {MeAssignedRecordsResponseRecordsInnerAssignedToUser}
     * @memberof MeAssignedRecordsResponseRecordsInner
     */
    'assigned_to_user'?: MeAssignedRecordsResponseRecordsInnerAssignedToUser;
    /**
     * When the record was created
     * @type {string}
     * @memberof MeAssignedRecordsResponseRecordsInner
     */
    'created_at': string;
    /**
     * When the record was last updated
     * @type {string}
     * @memberof MeAssignedRecordsResponseRecordsInner
     */
    'updated_at': string;
    /**
     * URL to the record\'s page
     * @type {string}
     * @memberof MeAssignedRecordsResponseRecordsInner
     */
    'url'?: string;
    /**
     * URL to the record\'s API resource
     * @type {string}
     * @memberof MeAssignedRecordsResponseRecordsInner
     */
    'resource'?: string;
}

export const MeAssignedRecordsResponseRecordsInnerTypeEnum = {
    FEATURE: 'feature',
    EPIC: 'epic',
    REQUIREMENT: 'requirement',
    IDEA: 'idea',
    INITIATIVE: 'initiative',
    GOAL: 'goal',
    RELEASE: 'release',
    TODO: 'todo'
} as const;

export type MeAssignedRecordsResponseRecordsInnerTypeEnum = typeof MeAssignedRecordsResponseRecordsInnerTypeEnum[keyof typeof MeAssignedRecordsResponseRecordsInnerTypeEnum];


