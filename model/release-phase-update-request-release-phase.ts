/* tslint:disable */
/* eslint-disable */
/**
 * Aha! REST API
 * API for interacting with Aha! product management platform.  ## Rate Limiting The API enforces rate limits to ensure fair usage: - **300 requests per minute** per account - **20 requests per second** per account  When rate limits are exceeded, the API returns a `429 Too Many Requests` response with a `retry_after` header indicating when to retry.  ## Authentication The API supports two authentication methods: - **OAuth 2.0**: For web applications and integrations requiring user consent - **API Tokens**: For server-to-server integrations and personal access  ## Request Headers - **User-Agent**: Required header to identify the client application - **Content-Type**: Set to `application/json` for POST/PUT requests - **Authorization**: Bearer token or OAuth access token  ## Response Format All responses are in JSON format. List endpoints include pagination metadata in the `meta.pagination` object.  ## Error Handling The API uses standard HTTP status codes and includes detailed error messages in the response body for debugging. 
 *
 * The version of the OpenAPI document: 1.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface ReleasePhaseUpdateRequestReleasePhase
 */
export interface ReleasePhaseUpdateRequestReleasePhase {
    /**
     * Name of the release phase
     * @type {string}
     * @memberof ReleasePhaseUpdateRequestReleasePhase
     */
    'name'?: string;
    /**
     * Start date of the release phase
     * @type {string}
     * @memberof ReleasePhaseUpdateRequestReleasePhase
     */
    'start_on'?: string;
    /**
     * End date of the release phase
     * @type {string}
     * @memberof ReleasePhaseUpdateRequestReleasePhase
     */
    'end_on'?: string;
    /**
     * HTML description of the release phase
     * @type {string}
     * @memberof ReleasePhaseUpdateRequestReleasePhase
     */
    'description'?: string;
    /**
     * Source for calculating progress
     * @type {string}
     * @memberof ReleasePhaseUpdateRequestReleasePhase
     */
    'progress_source'?: ReleasePhaseUpdateRequestReleasePhaseProgressSourceEnum;
    /**
     * Progress percentage (only when progress_source is manual)
     * @type {number}
     * @memberof ReleasePhaseUpdateRequestReleasePhase
     */
    'progress'?: number;
    /**
     * Source for calculating duration
     * @type {string}
     * @memberof ReleasePhaseUpdateRequestReleasePhase
     */
    'duration_source'?: ReleasePhaseUpdateRequestReleasePhaseDurationSourceEnum;
    /**
     * Custom field values
     * @type {{ [key: string]: any; }}
     * @memberof ReleasePhaseUpdateRequestReleasePhase
     */
    'custom_fields'?: { [key: string]: any; };
}

export const ReleasePhaseUpdateRequestReleasePhaseProgressSourceEnum = {
    PROGRESS_MANUAL: 'progress_manual',
    PROGRESS_FROM_FEATURES: 'progress_from_features',
    PROGRESS_FROM_TODOS: 'progress_from_todos',
    PROGRESS_FROM_FEATURES_COMPLETED: 'progress_from_features_completed'
} as const;

export type ReleasePhaseUpdateRequestReleasePhaseProgressSourceEnum = typeof ReleasePhaseUpdateRequestReleasePhaseProgressSourceEnum[keyof typeof ReleasePhaseUpdateRequestReleasePhaseProgressSourceEnum];
export const ReleasePhaseUpdateRequestReleasePhaseDurationSourceEnum = {
    DURATION_MANUAL: 'duration_manual',
    DURATION_FROM_FEATURES: 'duration_from_features'
} as const;

export type ReleasePhaseUpdateRequestReleasePhaseDurationSourceEnum = typeof ReleasePhaseUpdateRequestReleasePhaseDurationSourceEnum[keyof typeof ReleasePhaseUpdateRequestReleasePhaseDurationSourceEnum];


