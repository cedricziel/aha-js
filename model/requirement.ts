/* tslint:disable */
/* eslint-disable */
/**
 * Aha! REST API
 * API for interacting with Aha! product management platform.  ## Rate Limiting The API enforces rate limits to ensure fair usage: - **300 requests per minute** per account - **20 requests per second** per account  When rate limits are exceeded, the API returns a `429 Too Many Requests` response with a `retry_after` header indicating when to retry.  ## Authentication The API supports two authentication methods: - **OAuth 2.0**: For web applications and integrations requiring user consent - **API Tokens**: For server-to-server integrations and personal access  ## Request Headers - **User-Agent**: Required header to identify the client application - **Content-Type**: Set to `application/json` for POST/PUT requests - **Authorization**: Bearer token or OAuth access token  ## Response Format All responses are in JSON format. List endpoints include pagination metadata in the `meta.pagination` object.  ## Error Handling The API uses standard HTTP status codes and includes detailed error messages in the response body for debugging. 
 *
 * The version of the OpenAPI document: 1.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { Attachment } from './attachment';
// May contain unused imports in some cases
// @ts-ignore
import type { CustomField } from './custom-field';
// May contain unused imports in some cases
// @ts-ignore
import type { IntegrationField } from './integration-field';
// May contain unused imports in some cases
// @ts-ignore
import type { RequirementAssignedToUser } from './requirement-assigned-to-user';
// May contain unused imports in some cases
// @ts-ignore
import type { RequirementDescription } from './requirement-description';
// May contain unused imports in some cases
// @ts-ignore
import type { RequirementFeature } from './requirement-feature';
// May contain unused imports in some cases
// @ts-ignore
import type { RequirementFullTagsInner } from './requirement-full-tags-inner';
// May contain unused imports in some cases
// @ts-ignore
import type { RequirementWorkflowStatus } from './requirement-workflow-status';
// May contain unused imports in some cases
// @ts-ignore
import type { RequirementWorkflowStatusTimesInner } from './requirement-workflow-status-times-inner';
// May contain unused imports in some cases
// @ts-ignore
import type { User } from './user';

/**
 * 
 * @export
 * @interface Requirement
 */
export interface Requirement {
    /**
     * Unique identifier for the requirement
     * @type {string}
     * @memberof Requirement
     */
    'id': string;
    /**
     * Name of the requirement
     * @type {string}
     * @memberof Requirement
     */
    'name': string;
    /**
     * Reference number of the requirement
     * @type {string}
     * @memberof Requirement
     */
    'reference_num': string;
    /**
     * Position of the requirement in the list
     * @type {number}
     * @memberof Requirement
     */
    'position'?: number;
    /**
     * When the requirement was created
     * @type {string}
     * @memberof Requirement
     */
    'created_at': string;
    /**
     * When the requirement was last updated
     * @type {string}
     * @memberof Requirement
     */
    'updated_at': string;
    /**
     * ID of the release this requirement belongs to
     * @type {number}
     * @memberof Requirement
     */
    'release_id'?: number;
    /**
     * 
     * @type {User}
     * @memberof Requirement
     */
    'created_by_user'?: User;
    /**
     * 
     * @type {RequirementWorkflowStatus}
     * @memberof Requirement
     */
    'workflow_status': RequirementWorkflowStatus;
    /**
     * URL to view the requirement in the web interface
     * @type {string}
     * @memberof Requirement
     */
    'url': string;
    /**
     * API URL for this requirement
     * @type {string}
     * @memberof Requirement
     */
    'resource': string;
    /**
     * 
     * @type {RequirementDescription}
     * @memberof Requirement
     */
    'description'?: RequirementDescription;
    /**
     * 
     * @type {RequirementFeature}
     * @memberof Requirement
     */
    'feature': RequirementFeature;
    /**
     * 
     * @type {RequirementAssignedToUser}
     * @memberof Requirement
     */
    'assigned_to_user'?: RequirementAssignedToUser;
    /**
     * Attachments associated with this requirement
     * @type {Array<Attachment>}
     * @memberof Requirement
     */
    'attachments'?: Array<Attachment>;
    /**
     * Tags associated with this requirement
     * @type {Array<string>}
     * @memberof Requirement
     */
    'tags'?: Array<string>;
    /**
     * Full tag objects with IDs and names
     * @type {Array<RequirementFullTagsInner>}
     * @memberof Requirement
     */
    'full_tags'?: Array<RequirementFullTagsInner>;
    /**
     * Custom fields associated with this requirement
     * @type {Array<CustomField>}
     * @memberof Requirement
     */
    'custom_fields'?: Array<CustomField>;
    /**
     * Integration fields associated with this requirement
     * @type {Array<IntegrationField>}
     * @memberof Requirement
     */
    'integration_fields'?: Array<IntegrationField>;
    /**
     * Number of comments on this requirement
     * @type {number}
     * @memberof Requirement
     */
    'comments_count'?: number;
    /**
     * History of workflow status changes
     * @type {Array<RequirementWorkflowStatusTimesInner>}
     * @memberof Requirement
     */
    'workflow_status_times'?: Array<RequirementWorkflowStatusTimesInner>;
}

