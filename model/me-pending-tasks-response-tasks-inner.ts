/* tslint:disable */
/* eslint-disable */
/**
 * Aha! REST API
 * API for interacting with Aha! product management platform.  ## Rate Limiting The API enforces rate limits to ensure fair usage: - **300 requests per minute** per account - **20 requests per second** per account  When rate limits are exceeded, the API returns a `429 Too Many Requests` response with a `retry_after` header indicating when to retry.  ## Authentication The API supports two authentication methods: - **OAuth 2.0**: For web applications and integrations requiring user consent - **API Tokens**: For server-to-server integrations and personal access  ## Request Headers - **User-Agent**: Required header to identify the client application - **Content-Type**: Set to `application/json` for POST/PUT requests - **Authorization**: Bearer token or OAuth access token  ## Response Format All responses are in JSON format. List endpoints include pagination metadata in the `meta.pagination` object.  ## Error Handling The API uses standard HTTP status codes and includes detailed error messages in the response body for debugging. 
 *
 * The version of the OpenAPI document: 1.0.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { MeAssignedRecordsResponseRecordsInnerAssignedToUser } from './me-assigned-records-response-records-inner-assigned-to-user';
// May contain unused imports in some cases
// @ts-ignore
import type { MePendingTasksResponseTasksInnerAssignedByUser } from './me-pending-tasks-response-tasks-inner-assigned-by-user';

export interface MePendingTasksResponseTasksInner {
    /**
     * Task ID
     */
    'id': string;
    /**
     * Task name
     */
    'name': string;
    /**
     * Task description
     */
    'description'?: string;
    /**
     * Task due date
     */
    'due_date'?: string;
    /**
     * Task priority level
     */
    'priority'?: MePendingTasksResponseTasksInnerPriorityEnum;
    /**
     * Task status
     */
    'status': MePendingTasksResponseTasksInnerStatusEnum;
    'assigned_to_user': MeAssignedRecordsResponseRecordsInnerAssignedToUser;
    'assigned_by_user'?: MePendingTasksResponseTasksInnerAssignedByUser;
    /**
     * When the task was created
     */
    'created_at': string;
    /**
     * When the task was last updated
     */
    'updated_at': string;
    /**
     * URL to the task\'s page
     */
    'url'?: string;
    /**
     * URL to the task\'s API resource
     */
    'resource'?: string;
}

export const MePendingTasksResponseTasksInnerPriorityEnum = {
    LOW: 'low',
    MEDIUM: 'medium',
    HIGH: 'high',
    URGENT: 'urgent'
} as const;

export type MePendingTasksResponseTasksInnerPriorityEnum = typeof MePendingTasksResponseTasksInnerPriorityEnum[keyof typeof MePendingTasksResponseTasksInnerPriorityEnum];
export const MePendingTasksResponseTasksInnerStatusEnum = {
    PENDING: 'pending',
    IN_PROGRESS: 'in_progress',
    COMPLETED: 'completed',
    CANCELLED: 'cancelled'
} as const;

export type MePendingTasksResponseTasksInnerStatusEnum = typeof MePendingTasksResponseTasksInnerStatusEnum[keyof typeof MePendingTasksResponseTasksInnerStatusEnum];


